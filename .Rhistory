source("rankall.R")
rankall("heart attack", 20)
a <- rankall("heart attack", 20)
View(a)
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
outcome = "heart attack"
num = "best"
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
rankall <- function(outcome, num = "best") {
#read the data in:
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
#check that the input for outcome is valid:
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
#subset the data to only get the columns we're interested in:
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
#subset the data further to only pull in the outcome we're interested in. Sort the list by state, outcome, name (in that order):
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
}
View(df4)
?by
by(df4, df4$State, min)
by(df4, df4$State, max)
str(df4)
tapply(df4$Outcome, df4$State, min)
tapply(df4$Outcome, df4$State, function(x) x[3,])
tapply(df4$Outcome, df4$State, function(x) {x[3,]})
tapply(df4$Outcome, df4$State, function(x) x[[3,])
tapply(df4$Outcome, df4$State, function(x) x[[3,]])
tapply(df4$Outcome, df4$State, function(x) x[3,])
tapply(df4$Outcome, df4$State, max
)
do.call(tapply(df4$Outcome, df4$State, max))
?do.call
testr <- as.matrix(df4)
testr
str(testr)
head(testr)
tapply(testr, testr$State)
tapply(testr, testr[,2], min)
rm(testr)
test <- split(df4, df4$State)
test[1]
test[2]
test[1]
test[[1]]
a <- test[1]
b <- test[[1]]
class(a)
class(b)
rm(b)
rm(a)
lapply(test, function(data) data[[1,]])
lapply(test, function(data) data[[1]])
lapply(test, function(data) data[[1,]])
lapply(test, function(data) data[[1,2]])
lapply(test, subset(x))
lapply(test, subset(test[[1,]]))
lapply(test, subset(test[[1]]))
lapply(test, test[1])
lapply(test, test$AK)
lapply(test, test[1,])
test[1]
class(test[1])
lapply(test, test[[1,]])
lapply(test, test[1][1])
lapply(test, function(df) df[1,])
a <- lapply(test, function(df) df[1,])
a
numm <- list()
if (num == "best") {
numm <- 1 }
else if (num == "worst") {
numm <- nrow(df) }
else {
numm <- num
}
lafunc <- function(df, numm) {
df[numm,]
}
numm <- list()
if (num == "best") {
numm <- 1 }
else if (num == "worst") {
numm <- nrow(df) }
numm <- list()
if (num == "best") {
numm <- 1 }
else if (num == "worst") {
numm <- "nrow(df)" }
else {
numm <- num
}
outcome_index <- 5
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df, num) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
rankall <- function(outcome, num = "best") {
#read the data in:
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
#check that the input for outcome is valid:
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
#subset the data to only get the columns we're interested in:
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
#subset the data further to only pull in the outcome we're interested in. Sort the list by state, outcome, name (in that order):
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df, num) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
}
a <- lapply(test, lafunc)
rankall <- function(outcome, num = "best") {
#read the data in:
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
#check that the input for outcome is valid:
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
#subset the data to only get the columns we're interested in:
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
#subset the data further to only pull in the outcome we're interested in. Sort the list by state, outcome, name (in that order):
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df, num) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
}
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
outcome = "heart attack"
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df, num) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
num = 2
View(df4)
test <- split(df4, df4$State)
lapply(test, lafunc)
lafunc <- function(df) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
rankall <- function(outcome, num = "best") {
#read the data in:
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = TRUE)
#check that the input for outcome is valid:
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
#subset the data to only get the columns we're interested in:
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
#subset the data further to only pull in the outcome we're interested in. Sort the list by state, outcome, name (in that order):
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
}
lapply(test, lafunc)
num = "best"
lapply(test, lafunc)
num = "worst"
lapply(test, lafunc)
num = 4
lapply(test, lafunc)
lafunc <- function(df) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
listy <- split(df4, df4$State)
lapply(listy, lafunc)
listy2 <- lapply(listy, lafunc)
listy2
as.data.frame(listy2)
listy2 <- as.data.frame(lapply(listy, lafunc))
View(listy2)
listy2 <- lapply(listy, lafunc)
unlist(listy2)
b <- unlist(listy2)
rm(b)
str(listy2)
?names
names(listy2)
listy2 <- sapply(listy, lafunc)
listy2
listy2[1]
listy2[[1]]
View(listy2)
list1 <- split(df4, df4$State)
list2 <- sapply(listy, lafunc)
rm(listy1, listy2)
rm(listy)
View(list2)
test <- data.frame(State=slist)
View(test)
test <- data.frame(State=slist, Hospital=list2[2,])
View(test)
test <- data.frame(State=slist, Hospital=list2[,1])
View(test)
test <- data.frame(State=slist, Hospital=list2$Hospital)
test <- data.frame(State=slist, Hospital=list2[ ,2])
View(test)
View(test)
test <- data.frame(State=slist)
test <- data.frame(Hospital=slist[2], State=slist)
View(test)
test <- data.frame(Hospital=slist[1], State=slist)
View(test)
test <- data.frame(Hospital=list2[1], State=slist)
test <- data.frame(Hospital=list2[1:54], State=slist)
View(test)
test <- as.data.frame(list2)
View(test)
test[1,]
rm(test)
as.vector(list2[1])
a <- as.vector(list2[1])
a <- as.vector(list2[1,])
a <- t(list2)
View(a)
list3 <- t(list2)
rm(a)
View(list3)
rownames(list3)
result <- data.frame(state=row.names(list3))
View(result)
unlist(list3)
?match
d4[list3[1,1]]
df4[list3[1,1]]
row.names(df4)
list1[1]
list2
list2[1]
View(list2)
list2[1,]
str(list2)
list2[,1]
View(list3)
list2 <- lapply(listy, lafunc)
list2 <- lapply(list1, lafunc)
list2 <- unlist(lapply(list1, lafunc))
list2
list2 <- sapply(list1, lafunc)
View(list2)
list1 <- split(df4, df4$State)
list2 <- sapply(list1, lafunc)
list3 <- t(list2)
View(list3)
list3[1,1]
list3[2,1]
list3[3,1]
list3[46,1]
list2 <- t(sapply(list1, lafunc))
View(list2)
unlist(list2[1])
unlist(list2[[1]])
return(list2)
source("rankall.R")
source("rankall.R")
rankall("heart attack", 20)
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = FALSE)
source("rankall.R")
rankall("heart attack", 20)
outcome = "heart attack"
num = "best"
df <- data.frame()
df <- read.csv("/Users/gregnowicki/Documents/Coursera/ProgrammingAssignment4/outcome-of-care-measures.csv", stringsAsFactors = FALSE)
olist <- c("heart attack", "heart failure", "pneumonia")
slist <- unique(df$State)
if ((match(outcome, olist) > 0) != TRUE) { stop("invalid input") }
df2 <- df[, c(2, 7, 11, 17, 23)]
outcome_index <- numeric()
if (outcome == "heart attack") {
outcome_index <- 3
} else if (outcome == "heart failure") {
outcome_index <- 4
} else if (outcome == "pneumonia") {
outcome_index <- 5
}
df3 <- df2[, c(1:2, outcome_index)]
colnames(df3) <- c("Hospital", "State", "Outcome")
df3$Outcome <- suppressWarnings(as.numeric(as.character(df3$Outcome)))
df3 <- df3[order(df3$State, df3$Outcome, df3$Hospital), ]
df4 <- df3[complete.cases(df3),]
lafunc <- function(df) {
if (num == "best") {
df[1, ]
}else if (num == "worst"){
df[nrow(df), ]
}else{
df[num, ]
}
}
list1 <- split(df4, df4$State)
list2 <- t(sapply(list1, lafunc))
View(list2)
result <- data.frame(state=list2[,2])
View(result)
result <- data.frame(state=row.names(list2))
View(result)
list3 <- as.data.frame(list2)
View(list3)
list3$Hospital
result <- data.frame(state=row.names(list3),hospital=list3$Hospital)
View(result)
result <- data.frame(state=row.names(list2))
View(result)
names(lsit2)
names(list2)
list1 <- split(df4, df4$State)
list2 <- t(sapply(list1, lafunc))
result <- data.frame(state=row.names(list2))
names(list2)
row.names(subset(list2[,2]))
row.names(list2)
row.names(list2[,2])
row.names(list2[,2])
source("rankall.R")
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
rankall("pneumonia", 20)
rankall("pneumonia", "worst")
tail(rankall("pneumonia", "worst"), 3)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
r
as.character(subset(r, state == "HI")$hospital)
as.character(subset(r, state == "HI"))
r <- rankall("pneumonia", "worst")
r
r <- rankall("heart failure", 10)
r
